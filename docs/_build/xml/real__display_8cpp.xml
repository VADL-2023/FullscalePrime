<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="real__display_8cpp" kind="file" language="C++">
    <compoundname>real_display.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes refid="State__Prelaunch_8h" local="yes">State_Prelaunch.h</includes>
    <includes refid="State__Enums_8h" local="yes">State_Enums.h</includes>
    <includes refid="Root_8h" local="yes">Root.h</includes>
    <includes refid="State_8h" local="yes">State.h</includes>
    <includes refid="State__Stepper1_8h" local="yes">State_Stepper1.h</includes>
    <includes refid="State__Stepper2_8h" local="yes">State_Stepper2.h</includes>
    <includes refid="State__Stepper3_8h" local="yes">State_Stepper3.h</includes>
    <includes refid="State__RCB__Motor_8h" local="yes">State_RCB_Motor.h</includes>
    <includes refid="State__Nacelle__Servo_8h" local="yes">State_Nacelle_Servo.h</includes>
    <includes refid="State__Lift__Servo_8h" local="yes">State_Lift_Servo.h</includes>
    <includes refid="State__Lift__Motor_8h" local="yes">State_Lift_Motor.h</includes>
    <includes refid="State__Level__Servo_8h" local="yes">State_Level_Servo.h</includes>
    <includes refid="State__Launch__Detection_8h" local="yes">State_Launch_Detection.h</includes>
    <includes refid="State__Apogee__Detection_8h" local="yes">State_Apogee_Detection.h</includes>
    <includes refid="State__Landing__Detection_8h" local="yes">State_Landing_Detection.h</includes>
    <includes refid="State__Full__Lift_8h" local="yes">State_Full_Lift.h</includes>
    <includes refid="State__Full__Level_8h" local="yes">State_Full_Level.h</includes>
    <includes refid="State__Full__RCB_8h" local="yes">State_Full_RCB.h</includes>
    <includes refid="State__PDS__Delay_8h" local="yes">State_PDS_Delay.h</includes>
    <includes refid="State__RAFCO__Mission_8h" local="yes">State_RAFCO_Mission.h</includes>
    <includes refid="State__SDR1_8h" local="yes">State_SDR1.h</includes>
    <includes refid="State__SDR2_8h" local="yes">State_SDR2.h</includes>
    <includes refid="State__Camera__Check_8h" local="yes">State_Camera_Check.h</includes>
    <includes local="no">map</includes>
    <includes local="yes">pigpio.h</includes>
    <includes local="no">unistd.h</includes>
    <incdepgraph>
      <node id="31">
        <label>sys/stat.h</label>
      </node>
      <node id="23">
        <label>netinet/in.h</label>
      </node>
      <node id="13">
        <label>sensors.h</label>
      </node>
      <node id="7">
        <label>Root.h</label>
        <link refid="Root_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>State_Lift_Servo.h</label>
        <link refid="State__Lift__Servo_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>State_Full_Level.h</label>
        <link refid="State__Full__Level_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>State_SDR2.h</label>
        <link refid="State__SDR2_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>pigpio.h</label>
      </node>
      <node id="34">
        <label>State_Stepper1.h</label>
        <link refid="State__Stepper1_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>stdlib.h</label>
      </node>
      <node id="49">
        <label>State_RAFCO_Mission.h</label>
        <link refid="State__RAFCO__Mission_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>opencv2/imgproc.hpp</label>
      </node>
      <node id="9">
        <label>string</label>
      </node>
      <node id="44">
        <label>State_Landing_Detection.h</label>
        <link refid="State__Landing__Detection_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>map</label>
      </node>
      <node id="47">
        <label>State_Full_RCB.h</label>
        <link refid="State__Full__RCB_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>State_SDR1.h</label>
        <link refid="State__SDR1_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>fstream</label>
      </node>
      <node id="24">
        <label>netdb.h</label>
      </node>
      <node id="25">
        <label>Stepper.h</label>
        <link refid="Stepper_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>config_IMU.hpp</label>
      </node>
      <node id="1">
        <label>/home/kushtimusprime/FullscalePrime/MainDriver/src/integration_tests/real_display.cpp</label>
        <link refid="real__display_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>sys/types.h</label>
      </node>
      <node id="48">
        <label>State_PDS_Delay.h</label>
        <link refid="State__PDS__Delay_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>string.h</label>
      </node>
      <node id="15">
        <label>Log.h</label>
        <link refid="Log_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>State.h</label>
        <link refid="State_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ctime</label>
      </node>
      <node id="27">
        <label>opencv2/core.hpp</label>
      </node>
      <node id="41">
        <label>State_Level_Servo.h</label>
        <link refid="State__Level__Servo_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>unistd.h</label>
      </node>
      <node id="28">
        <label>opencv2/videoio.hpp</label>
      </node>
      <node id="16">
        <label>registers.h</label>
      </node>
      <node id="36">
        <label>State_Stepper3.h</label>
        <link refid="State__Stepper3_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>State_Lift_Motor.h</label>
        <link refid="State__Lift__Motor_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>math.h</label>
      </node>
      <node id="29">
        <label>opencv2/highgui.hpp</label>
      </node>
      <node id="19">
        <label>sys/time.h</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="20">
        <label>PacketReceiver.h</label>
        <link refid="PacketReceiver_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>State_Apogee_Detection.h</label>
        <link refid="State__Apogee__Detection_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>State_RCB_Motor.h</label>
        <link refid="State__RCB__Motor_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>chrono</label>
      </node>
      <node id="22">
        <label>sys/socket.h</label>
      </node>
      <node id="11">
        <label>thread</label>
      </node>
      <node id="3">
        <label>State_Prelaunch.h</label>
        <link refid="State__Prelaunch_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>State_Stepper2.h</label>
        <link refid="State__Stepper2_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>State_Camera_Check.h</label>
        <link refid="State__Camera__Check_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>State_Launch_Detection.h</label>
        <link refid="State__Launch__Detection_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>State_Enums.h</label>
        <link refid="State__Enums_8h"/>
      </node>
      <node id="32">
        <label>stdio.h</label>
      </node>
      <node id="38">
        <label>State_Nacelle_Servo.h</label>
        <link refid="State__Nacelle__Servo_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>State_Full_Lift.h</label>
        <link refid="State__Full__Lift_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="real__display_8cpp_1a27eef83b5a1a670463b28120b3191285" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string getStateName</definition>
        <argsstring>(StateName stateType)</argsstring>
        <name>getStateName</name>
        <param>
          <type><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080" kindref="member">StateName</ref></type>
          <declname>stateType</declname>
        </param>
        <briefdescription>
<para>Get the state name as a string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stateType</parametername>
</parameternamelist>
<parameterdescription>
<para>The state name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string representing the state name </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kushtimusprime/FullscalePrime/MainDriver/src/integration_tests/real_display.cpp" line="41" column="13" bodyfile="/home/kushtimusprime/FullscalePrime/MainDriver/src/integration_tests/real_display.cpp" bodystart="41" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="real__display_8cpp_1a6c60a194eeb6424036076abdabdc4d2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void runFullStateMachine</definition>
        <argsstring>(Root &amp;root, State *initial_state)</argsstring>
        <name>runFullStateMachine</name>
        <param>
          <type><ref refid="classRoot" kindref="compound">Root</ref> &amp;</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="classState" kindref="compound">State</ref> *</type>
          <declname>initial_state</declname>
        </param>
        <briefdescription>
<para>Runs the entire state machine. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>root</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classRoot" kindref="compound">Root</ref> containing variables and methods shared between all states </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initial_state</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting state for state machine </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kushtimusprime/FullscalePrime/MainDriver/src/integration_tests/real_display.cpp" line="123" column="6" bodyfile="/home/kushtimusprime/FullscalePrime/MainDriver/src/integration_tests/real_display.cpp" bodystart="123" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="real__display_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
<para>Main method to run the full payload. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>exit status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kushtimusprime/FullscalePrime/MainDriver/src/integration_tests/real_display.cpp" line="168" column="5" bodyfile="/home/kushtimusprime/FullscalePrime/MainDriver/src/integration_tests/real_display.cpp" bodystart="168" bodyend="356"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Runs the payload from the USLI 2023 competition. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="State__Prelaunch_8h" kindref="compound">State_Prelaunch.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="State__Enums_8h" kindref="compound">State_Enums.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Root_8h" kindref="compound">Root.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="State_8h" kindref="compound">State.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="State__Stepper1_8h" kindref="compound">State_Stepper1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="State__Stepper2_8h" kindref="compound">State_Stepper2.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="State__Stepper3_8h" kindref="compound">State_Stepper3.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="State__RCB__Motor_8h" kindref="compound">State_RCB_Motor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="State__Nacelle__Servo_8h" kindref="compound">State_Nacelle_Servo.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="State__Lift__Servo_8h" kindref="compound">State_Lift_Servo.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="State__Lift__Motor_8h" kindref="compound">State_Lift_Motor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="State__Level__Servo_8h" kindref="compound">State_Level_Servo.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="State__Launch__Detection_8h" kindref="compound">State_Launch_Detection.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="State__Apogee__Detection_8h" kindref="compound">State_Apogee_Detection.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="State__Landing__Detection_8h" kindref="compound">State_Landing_Detection.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="State__Full__Lift_8h" kindref="compound">State_Full_Lift.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="State__Full__Level_8h" kindref="compound">State_Full_Level.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="State__Full__RCB_8h" kindref="compound">State_Full_RCB.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="State__PDS__Delay_8h" kindref="compound">State_PDS_Delay.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="State__RAFCO__Mission_8h" kindref="compound">State_RAFCO_Mission.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="State__SDR1_8h" kindref="compound">State_SDR1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="State__SDR2_8h" kindref="compound">State_SDR2.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="State__Camera__Check_8h" kindref="compound">State_Camera_Check.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pigpio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">std::string<sp/><ref refid="real__display_8cpp_1a27eef83b5a1a670463b28120b3191285" kindref="member">getStateName</ref>(<ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080" kindref="member">StateName</ref><sp/>stateType)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(stateType)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080ad6449fcdbfd903fc01ea0d587e04e635" kindref="member">STATE_RCB_MOTOR</ref>:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;RCB<sp/>Motor&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a37ffbe8a8de7005790b06cde84852d47" kindref="member">STATE_NACELLE_SERVO</ref>:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Nacelle<sp/>Servo&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080afab79eb7cd4306d8ed151882d80e8ca6" kindref="member">STATE_LIFT_SERVO</ref>:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Lift<sp/>Servo&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a89594d7d8c1a5b41cb441a645e8605a4" kindref="member">STATE_LIFT_MOTOR</ref>:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Lift<sp/>Motor&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a6387e9160cf2092e474d11f33eaababd" kindref="member">STATE_LEVEL_SERVO</ref>:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Level<sp/>Servo&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080abb6c0e66a2b770413771a2c8c65b91d8" kindref="member">STATE_STEPPER1</ref>:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Stepper<sp/>1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a1e6294fa02fdfed9f4540202eea70955" kindref="member">STATE_STEPPER2</ref>:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Stepper<sp/>2&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080aeb58cbfa6702a8a6f472948139d1307f" kindref="member">STATE_STEPPER3</ref>:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Stepper<sp/>3&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a006c9ad863eee2899b8d86bf4f46f3f3" kindref="member">STATE_SDR1</ref>:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;State<sp/>SDR<sp/>1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080aec95dce537e1fa3f663652efe0bc1bba" kindref="member">STATE_SDR2</ref>:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;State<sp/>SDR<sp/>2&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a13833a969780606eda96665d3b6790ac" kindref="member">STATE_PRELAUNCH</ref>:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Pre<sp/>launch&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a6c7ee00864c30bb7140826aaa87360e8" kindref="member">STATE_LAUNCH_DETECTION</ref>:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Launch<sp/>Detection&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080acdc70ab16de42a448a1c0c0d0d27af6a" kindref="member">STATE_APOGEE_DETECTION</ref>:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Apogee<sp/>Detection&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a1a27ced791344382e34a0fc713ea62fd" kindref="member">STATE_LANDING_DETECTION</ref>:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Landing<sp/>Detection&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080aaa8b5de2a607f036ffac70a5224656e8" kindref="member">STATE_FULL_LIFT</ref>:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Full<sp/>Lift&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a904c665859a30811c334cd579e51feec" kindref="member">STATE_FULL_LEVEL</ref>:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Full<sp/>Level&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a6141031ee53c7b3e2d3acd23d42a9e94" kindref="member">STATE_FULL_RCB</ref>:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Full<sp/>RCB&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a664dc9bddaae2a9de1a2925a177b1e7d" kindref="member">STATE_PDS_DELAY</ref>:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PDS<sp/>Delay&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080ac14947806211d1790af7cce5e8331a17" kindref="member">STATE_RAFCO_MISSION</ref>:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;RAFCO<sp/>Mission&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a36010d2a75172f0f2ec20944d694987c" kindref="member">STATE_CAMERA_CHECK</ref>:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Check&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a3b8fcb01cbfafaacda7074a210e8b1de" kindref="member">END_STATE</ref>:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;End<sp/>State&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;UNKNOWN&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="real__display_8cpp_1a6c60a194eeb6424036076abdabdc4d2b" kindref="member">runFullStateMachine</ref>(<ref refid="classRoot" kindref="compound">Root</ref><sp/>&amp;root,<sp/><ref refid="classState" kindref="compound">State</ref><sp/>*initial_state)</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classState" kindref="compound">State</ref><sp/>*current_state<sp/>=<sp/>initial_state;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>root.<ref refid="classRoot_1acd55503015ba119018dc122a4ff590aa" kindref="member">start_time_</ref><sp/>=<sp/>root.<ref refid="classRoot_1a1806fd2e246ba5807fa04d4f2c4f5bad" kindref="member">getCurrentTime</ref>();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Start<sp/>machine&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="State__Enums_8h_1ab10943c68f32680aedb347755b5488ec" kindref="member">EventName</ref><sp/>curr_event;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>realDisplayTest<sp/>is<sp/>not<sp/>a<sp/>unit<sp/>fsm,<sp/>so<sp/>we<sp/>will<sp/>run<sp/>execute<sp/>to<sp/>have<sp/>the<sp/>state<sp/>act<sp/>normally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root.<ref refid="classRoot_1ad35c4bab054fb58e16a104548b002da0" kindref="member">is_unit_fsm_</ref>)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_event<sp/>=<sp/>current_state-&gt;<ref refid="classState_1a571cb364027c5ee65658c623bc03d3b5" kindref="member">unitExecute</ref>();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usleep(root.<ref refid="classRoot_1aa16b41f9e18e2228471b333149bde688" kindref="member">unit_test_delay_ms_</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_event<sp/>=<sp/>current_state-&gt;<ref refid="classState_1aad21360bf6da12cc8442bf0da8bf37a9" kindref="member">execute</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080" kindref="member">StateName</ref><sp/>next_state<sp/>=<sp/>current_state-&gt;<ref refid="classState_1a7b93492451b30498b550556bdf333203" kindref="member">getNextState</ref>(curr_event);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Until<sp/>we<sp/>get<sp/>to<sp/>end<sp/>state,<sp/>execute<sp/>the<sp/>current<sp/>state,<sp/>then<sp/>get<sp/>the<sp/>next<sp/>state,<sp/>and<sp/>run<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(next_state<sp/>!=<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a3b8fcb01cbfafaacda7074a210e8b1de" kindref="member">END_STATE</ref>)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_state<sp/>=<sp/>root.<ref refid="classRoot_1ad377977f1bce43916756f1b09559b8a6" kindref="member">states_</ref>[next_state];</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root.<ref refid="classRoot_1ad35c4bab054fb58e16a104548b002da0" kindref="member">is_unit_fsm_</ref>)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_event<sp/>=<sp/>current_state-&gt;<ref refid="classState_1a571cb364027c5ee65658c623bc03d3b5" kindref="member">unitExecute</ref>();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Automatically<sp/>sleep<sp/>for<sp/>1<sp/>second<sp/>after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usleep(root.<ref refid="classRoot_1aa16b41f9e18e2228471b333149bde688" kindref="member">unit_test_delay_ms_</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_event<sp/>=<sp/>current_state-&gt;<ref refid="classState_1aad21360bf6da12cc8442bf0da8bf37a9" kindref="member">execute</ref>();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_state<sp/>=<sp/>current_state-&gt;<ref refid="classState_1a7b93492451b30498b550556bdf333203" kindref="member">getNextState</ref>(curr_event);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Temporary<sp/>termination<sp/>thing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;State<sp/>Machine<sp/>Completed&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="real__display_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()</highlight></codeline>
<codeline lineno="169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_unit_fsm<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRoot" kindref="compound">Root</ref><sp/>root(is_unit_fsm);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>State<sp/>Definitions<sp/>and<sp/>Declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>State<sp/>Prelaunch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080" kindref="member">StateName</ref><sp/>prelaunch_name<sp/>=<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a13833a969780606eda96665d3b6790ac" kindref="member">STATE_PRELAUNCH</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;EventName,<sp/>StateName&gt;<sp/>prelaunch_transitions;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>prelaunch_transitions.insert(std::pair&lt;EventName,<sp/>StateName&gt;(<ref refid="State__Enums_8h_1ab10943c68f32680aedb347755b5488eca7a96cdaec0fa2c63b96dd1ff3c4d3fae" kindref="member">PRELAUNCH_COMPLETE</ref>,<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a6c7ee00864c30bb7140826aaa87360e8" kindref="member">STATE_LAUNCH_DETECTION</ref>));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classState__Prelaunch" kindref="compound">State_Prelaunch</ref><sp/>prelaunch(prelaunch_name,<sp/>prelaunch_transitions,<sp/>&amp;root);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>State<sp/>Launch<sp/>Detection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080" kindref="member">StateName</ref><sp/>launch_detection_name<sp/>=<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a6c7ee00864c30bb7140826aaa87360e8" kindref="member">STATE_LAUNCH_DETECTION</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;EventName,<sp/>StateName&gt;<sp/>launch_detection_transitions;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>launch_detection_transitions.insert(std::pair&lt;EventName,<sp/>StateName&gt;(<ref refid="State__Enums_8h_1ab10943c68f32680aedb347755b5488ecad35adbf96aca4c59b4664aa9e24ebc84" kindref="member">LAUNCH_DETECTED</ref>,<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080acdc70ab16de42a448a1c0c0d0d27af6a" kindref="member">STATE_APOGEE_DETECTION</ref>));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classState__Launch__Detection" kindref="compound">State_Launch_Detection</ref><sp/>launch_detection(launch_detection_name,<sp/>launch_detection_transitions,<sp/>&amp;root);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>State<sp/>Apogee<sp/>Detection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080" kindref="member">StateName</ref><sp/>apogee_detection_name<sp/>=<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080acdc70ab16de42a448a1c0c0d0d27af6a" kindref="member">STATE_APOGEE_DETECTION</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;EventName,<sp/>StateName&gt;<sp/>apogee_detection_transitions;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>apogee_detection_transitions.insert(std::pair&lt;EventName,<sp/>StateName&gt;(<ref refid="State__Enums_8h_1ab10943c68f32680aedb347755b5488eca287421844f42e527e111aec70dfde639" kindref="member">APOGEE_DETECTED</ref>,<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a1a27ced791344382e34a0fc713ea62fd" kindref="member">STATE_LANDING_DETECTION</ref>));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classState__Apogee__Detection" kindref="compound">State_Apogee_Detection</ref><sp/>apogee_detection(apogee_detection_name,<sp/>apogee_detection_transitions,<sp/>&amp;root);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>State<sp/>Landing<sp/>Detection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080" kindref="member">StateName</ref><sp/>landing_detection_name<sp/>=<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a1a27ced791344382e34a0fc713ea62fd" kindref="member">STATE_LANDING_DETECTION</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;EventName,<sp/>StateName&gt;<sp/>landing_detection_transitions;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>landing_detection_transitions.insert(std::pair&lt;EventName,<sp/>StateName&gt;(<ref refid="State__Enums_8h_1ab10943c68f32680aedb347755b5488eca48cb1aff1d386f0905196b128b20e7d1" kindref="member">LANDING_DETECTED</ref>,<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a664dc9bddaae2a9de1a2925a177b1e7d" kindref="member">STATE_PDS_DELAY</ref>));</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classState__Landing__Detection" kindref="compound">State_Landing_Detection</ref><sp/>landing_detection(landing_detection_name,<sp/>landing_detection_transitions,<sp/>&amp;root);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>State<sp/>PDS<sp/>Delay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080" kindref="member">StateName</ref><sp/>pds_delay_name<sp/>=<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a664dc9bddaae2a9de1a2925a177b1e7d" kindref="member">STATE_PDS_DELAY</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;EventName,<sp/>StateName&gt;<sp/>pds_delay_transitions;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>pds_delay_transitions.insert(std::pair&lt;EventName,<sp/>StateName&gt;(<ref refid="State__Enums_8h_1ab10943c68f32680aedb347755b5488eca1debdb60dab652d8ee4ab62c6129f487" kindref="member">DELAY</ref>,<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a36010d2a75172f0f2ec20944d694987c" kindref="member">STATE_CAMERA_CHECK</ref>));</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classState__PDS__Delay" kindref="compound">State_PDS_Delay</ref><sp/>pds_delay(pds_delay_name,<sp/>pds_delay_transitions,<sp/>&amp;root);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>State<sp/>Camera<sp/>Check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080" kindref="member">StateName</ref><sp/>camera_check_name<sp/>=<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a36010d2a75172f0f2ec20944d694987c" kindref="member">STATE_CAMERA_CHECK</ref>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;EventName,<sp/>StateName&gt;<sp/>camera_check_transitions;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>camera_check_transitions.insert(std::pair&lt;EventName,<sp/>StateName&gt;(<ref refid="State__Enums_8h_1ab10943c68f32680aedb347755b5488eca8416ae9efe441008f2ce2e9374b94b48" kindref="member">CAMERA_PICKED</ref>,<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a6141031ee53c7b3e2d3acd23d42a9e94" kindref="member">STATE_FULL_RCB</ref>));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classState__Camera__Check" kindref="compound">State_Camera_Check</ref><sp/>camera_check(camera_check_name,<sp/>camera_check_transitions,<sp/>&amp;root);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>State<sp/>RCB<sp/>Detection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080" kindref="member">StateName</ref><sp/>full_rcb_name<sp/>=<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a6141031ee53c7b3e2d3acd23d42a9e94" kindref="member">STATE_FULL_RCB</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;EventName,<sp/>StateName&gt;<sp/>full_rcb_transitions;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>full_rcb_transitions.insert(std::pair&lt;EventName,<sp/>StateName&gt;(<ref refid="State__Enums_8h_1ab10943c68f32680aedb347755b5488eca175c0870f0ceda55219307557922b1b4" kindref="member">RCB_SUCCESS</ref>,<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080aaa8b5de2a607f036ffac70a5224656e8" kindref="member">STATE_FULL_LIFT</ref>));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>full_rcb_transitions.insert(std::pair&lt;EventName,<sp/>StateName&gt;(<ref refid="State__Enums_8h_1ab10943c68f32680aedb347755b5488ecae544f5fb01a8ba9d1bb5aaa8dcb6c0db" kindref="member">RCB_FAILURE</ref>,<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080ac14947806211d1790af7cce5e8331a17" kindref="member">STATE_RAFCO_MISSION</ref>));</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classState__Full__RCB" kindref="compound">State_Full_RCB</ref><sp/>full_rcb(full_rcb_name,<sp/>full_rcb_transitions,<sp/>&amp;root);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>State<sp/>Full<sp/>Lift</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080" kindref="member">StateName</ref><sp/>full_lift_name<sp/>=<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080aaa8b5de2a607f036ffac70a5224656e8" kindref="member">STATE_FULL_LIFT</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;EventName,<sp/>StateName&gt;<sp/>full_lift_transitions;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>full_lift_transitions.insert(std::pair&lt;EventName,<sp/>StateName&gt;(<ref refid="State__Enums_8h_1ab10943c68f32680aedb347755b5488eca068c3bc9a1b0534e788c9060464c9a8b" kindref="member">LIFT_SUCCESS</ref>,<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a904c665859a30811c334cd579e51feec" kindref="member">STATE_FULL_LEVEL</ref>));</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>full_lift_transitions.insert(std::pair&lt;EventName,<sp/>StateName&gt;(<ref refid="State__Enums_8h_1ab10943c68f32680aedb347755b5488eca3a659773b8d46fe8bcf343601f371d98" kindref="member">LIFT_FAILURE</ref>,<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080ac14947806211d1790af7cce5e8331a17" kindref="member">STATE_RAFCO_MISSION</ref>));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classState__Full__Lift" kindref="compound">State_Full_Lift</ref><sp/>full_lift(full_lift_name,<sp/>full_lift_transitions,<sp/>&amp;root);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>State<sp/>Full<sp/>Level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080" kindref="member">StateName</ref><sp/>full_level_name<sp/>=<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a904c665859a30811c334cd579e51feec" kindref="member">STATE_FULL_LEVEL</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;EventName,<sp/>StateName&gt;<sp/>full_level_transitions;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>full_level_transitions.insert(std::pair&lt;EventName,<sp/>StateName&gt;(<ref refid="State__Enums_8h_1ab10943c68f32680aedb347755b5488ecaf654be96ac74a2ba172cc6f10064c77d" kindref="member">LEVEL_SUCCESS</ref>,<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080ac14947806211d1790af7cce5e8331a17" kindref="member">STATE_RAFCO_MISSION</ref>));</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>full_level_transitions.insert(std::pair&lt;EventName,<sp/>StateName&gt;(<ref refid="State__Enums_8h_1ab10943c68f32680aedb347755b5488eca0aeaf689272c45b9482ea2c3bab82b2a" kindref="member">LEVEL_FAILURE</ref>,<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080ac14947806211d1790af7cce5e8331a17" kindref="member">STATE_RAFCO_MISSION</ref>));</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classState__Full__Level" kindref="compound">State_Full_Level</ref><sp/>full_level(full_level_name,<sp/>full_level_transitions,<sp/>&amp;root);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>State<sp/>RAFCO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080" kindref="member">StateName</ref><sp/>rafco_mission_name<sp/>=<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080ac14947806211d1790af7cce5e8331a17" kindref="member">STATE_RAFCO_MISSION</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;EventName,<sp/>StateName&gt;<sp/>rafco_mission_transitions;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>rafco_mission_transitions.insert(std::pair&lt;EventName,<sp/>StateName&gt;(<ref refid="State__Enums_8h_1ab10943c68f32680aedb347755b5488eca5d57cffb7b58b684f2fd58868a267848" kindref="member">RAFCO_COMPLETE</ref>,<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a3b8fcb01cbfafaacda7074a210e8b1de" kindref="member">END_STATE</ref>));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>rafco_mission_transitions.insert(std::pair&lt;EventName,<sp/>StateName&gt;(<ref refid="State__Enums_8h_1ab10943c68f32680aedb347755b5488eca34b7c0aafc4577e0ae228f2112dd63c0" kindref="member">RAFCO_REDO</ref>,<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a6141031ee53c7b3e2d3acd23d42a9e94" kindref="member">STATE_FULL_RCB</ref>));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classState__RAFCO__Mission" kindref="compound">State_RAFCO_Mission</ref><sp/>rafco_mission(rafco_mission_name,<sp/>rafco_mission_transitions,<sp/>&amp;root);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>States<sp/>to<sp/>Machine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>root.<ref refid="classRoot_1a0e98881d2cddd732762b3a417cf57179" kindref="member">addState</ref>(&amp;prelaunch);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>root.<ref refid="classRoot_1a0e98881d2cddd732762b3a417cf57179" kindref="member">addState</ref>(&amp;launch_detection);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>root.<ref refid="classRoot_1a0e98881d2cddd732762b3a417cf57179" kindref="member">addState</ref>(&amp;apogee_detection);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>root.<ref refid="classRoot_1a0e98881d2cddd732762b3a417cf57179" kindref="member">addState</ref>(&amp;landing_detection);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>root.<ref refid="classRoot_1a0e98881d2cddd732762b3a417cf57179" kindref="member">addState</ref>(&amp;pds_delay);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>root.<ref refid="classRoot_1a0e98881d2cddd732762b3a417cf57179" kindref="member">addState</ref>(&amp;camera_check);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>root.<ref refid="classRoot_1a0e98881d2cddd732762b3a417cf57179" kindref="member">addState</ref>(&amp;full_rcb);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>root.<ref refid="classRoot_1a0e98881d2cddd732762b3a417cf57179" kindref="member">addState</ref>(&amp;full_lift);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>root.<ref refid="classRoot_1a0e98881d2cddd732762b3a417cf57179" kindref="member">addState</ref>(&amp;full_level);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>root.<ref refid="classRoot_1a0e98881d2cddd732762b3a417cf57179" kindref="member">addState</ref>(&amp;rafco_mission);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>runTests<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>userInput;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>userInt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classState" kindref="compound">State</ref><sp/>*current_state<sp/>=<sp/>&amp;prelaunch;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classState" kindref="compound">State</ref><sp/>*next_state<sp/>=<sp/>current_state;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="State__Enums_8h_1ab10943c68f32680aedb347755b5488ec" kindref="member">EventName</ref><sp/>curr_event;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(runTests)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;------------OPTIONS------------&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;1.<sp/>Run<sp/>whole<sp/>state<sp/>machine&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;2.<sp/>Run<sp/>a<sp/>single<sp/>state&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;3.<sp/>Quit&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;What<sp/>would<sp/>you<sp/>like<sp/>to<sp/>do?<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cin<sp/>&gt;&gt;<sp/>userInput;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userInt<sp/>=<sp/>stoi(userInput);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>selection&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userInt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(userInt<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="real__display_8cpp_1a6c60a194eeb6424036076abdabdc4d2b" kindref="member">runFullStateMachine</ref>(root,<sp/>current_state);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runTests<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(userInt<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;------------STATES-------------&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numStates<sp/>=<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a3b8fcb01cbfafaacda7074a210e8b1de" kindref="member">END_STATE</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numStates;<sp/>i++)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root.<ref refid="classRoot_1ad377977f1bce43916756f1b09559b8a6" kindref="member">states_</ref>.count((<ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080" kindref="member">StateName</ref>)i)){</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::to_string(i<sp/>+<sp/>1)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="real__display_8cpp_1a27eef83b5a1a670463b28120b3191285" kindref="member">getStateName</ref>((<ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080" kindref="member">StateName</ref>)i)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::to_string(numStates<sp/>+<sp/>1)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Quit&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;What<sp/>state<sp/>would<sp/>you<sp/>like<sp/>to<sp/>run?<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cin<sp/>&gt;&gt;<sp/>userInput;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userInt<sp/>=<sp/>stoi(userInput);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>selection&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userInt<sp/>=<sp/>numStates;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>&lt;<sp/>userInt<sp/>&amp;&amp;<sp/>userInt<sp/>&lt;<sp/>numStates)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080" kindref="member">StateName</ref><sp/>stateType<sp/>=<sp/>(<ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080" kindref="member">StateName</ref>)(userInt<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stateType<sp/>==<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a6c7ee00864c30bb7140826aaa87360e8" kindref="member">STATE_LAUNCH_DETECTION</ref>)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>YOU<sp/>SHOULD<sp/>NOT<sp/>RUN<sp/>THIS<sp/>STATE<sp/>ALONE.<sp/>PLEASE<sp/>RUN<sp/>STATE_PRELAUNCH<sp/>FIRST&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stateType<sp/>==<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080acdc70ab16de42a448a1c0c0d0d27af6a" kindref="member">STATE_APOGEE_DETECTION</ref>)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>YOU<sp/>SHOULD<sp/>NOT<sp/>RUN<sp/>THIS<sp/>STATE<sp/>ALONE.<sp/>PLEASE<sp/>RUN<sp/>STATE_PRELAUNCH<sp/>and<sp/>STATE_LAUNCH_DETECTION<sp/>FIRST&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stateType<sp/>==<sp/><ref refid="State__Enums_8h_1ac99446a312a3e7b8497ac6ec1f3ae080a1a27ced791344382e34a0fc713ea62fd" kindref="member">STATE_LANDING_DETECTION</ref>)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>YOU<sp/>SHOULD<sp/>NOT<sp/>RUN<sp/>THIS<sp/>STATE<sp/>ALONE.<sp/>PLEASE<sp/>RUN<sp/>STATE_PRELAUNCH<sp/>and<sp/>STATE_LAUNCH_DETECTION<sp/>and<sp/>STATE_APOGEE_DETECTION<sp/>FIRST&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_state<sp/>=<sp/>root.<ref refid="classRoot_1ad377977f1bce43916756f1b09559b8a6" kindref="member">states_</ref>[stateType];</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root.<ref refid="classRoot_1ad35c4bab054fb58e16a104548b002da0" kindref="member">is_unit_fsm_</ref>)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_event<sp/>=<sp/>current_state-&gt;<ref refid="classState_1a571cb364027c5ee65658c623bc03d3b5" kindref="member">unitExecute</ref>();</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Automatically<sp/>sleep<sp/>for<sp/>1<sp/>second<sp/>after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usleep(root.<ref refid="classRoot_1aa16b41f9e18e2228471b333149bde688" kindref="member">unit_test_delay_ms_</ref>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_event<sp/>=<sp/>current_state-&gt;<ref refid="classState_1aad21360bf6da12cc8442bf0da8bf37a9" kindref="member">execute</ref>();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numStates<sp/>-<sp/>1<sp/>&lt;=<sp/>userInt<sp/>&amp;&amp;<sp/>userInt<sp/>&lt;=<sp/>numStates)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Doing<sp/>nothing&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runTests<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(userInt<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runTests<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/kushtimusprime/FullscalePrime/MainDriver/src/integration_tests/real_display.cpp"/>
  </compounddef>
</doxygen>
