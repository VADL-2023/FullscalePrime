<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="PacketTest_8cpp" kind="file" language="C++">
    <compoundname>PacketTest.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">unistd.h</includes>
    <includes refid="PacketReceiver_8h" local="yes">./include/PacketReceiver.h</includes>
    <incdepgraph>
      <node id="8">
        <label>netinet/in.h</label>
      </node>
      <node id="11">
        <label>sensors.h</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="13">
        <label>fstream</label>
      </node>
      <node id="9">
        <label>netdb.h</label>
      </node>
      <node id="6">
        <label>sys/types.h</label>
      </node>
      <node id="10">
        <label>Log.h</label>
        <link refid="Log_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ctime</label>
      </node>
      <node id="3">
        <label>unistd.h</label>
      </node>
      <node id="12">
        <label>registers.h</label>
      </node>
      <node id="15">
        <label>sys/time.h</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="4">
        <label>./include/PacketReceiver.h</label>
        <link refid="PacketReceiver_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>chrono</label>
      </node>
      <node id="7">
        <label>sys/socket.h</label>
      </node>
      <node id="1">
        <label>/home/kushtimusprime/FullscalePrime/PacketReception/PacketTest.cpp</label>
        <link refid="PacketTest_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="PacketTest_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
<para>Main method to test APRS Packet Reception. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int representing exit status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kushtimusprime/FullscalePrime/PacketReception/PacketTest.cpp" line="15" column="5" bodyfile="/home/kushtimusprime/FullscalePrime/PacketReception/PacketTest.cpp" bodystart="15" bodyend="35"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Simply tests if we can receive APRS Packet. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="PacketReceiver_8h" kindref="compound">./include/PacketReceiver.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="PacketTest_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>configfile<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/home/vadl/FullscalePrime/sdr1.conf&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPacketReceiver" kindref="compound">PacketReceiver</ref><sp/>sdr1<sp/>=<sp/><ref refid="classPacketReceiver" kindref="compound">PacketReceiver</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;144.97M&quot;</highlight><highlight class="normal">,<sp/>8001,<sp/>configfile);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>sdr1.<ref refid="classPacketReceiver_1a71342adf823a60bb19eb598ab74bac72" kindref="member">startSDR</ref>();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structAX25Packet" kindref="compound">AX25Packet</ref><sp/>p;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(p.<ref refid="structAX25Packet_1a80cc00d0a9103d5b80f73f0beb112700" kindref="member">source</ref>.find(</highlight><highlight class="stringliteral">&quot;ERROR&quot;</highlight><highlight class="normal">)<sp/>==<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sdr1.<ref refid="classPacketReceiver_1acb9ab72d118d8e8efd298c54b7c43394" kindref="member">packetAvailable</ref>())<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>sdr1.<ref refid="classPacketReceiver_1a0967e86e89ca22f1234756f62f37cc24" kindref="member">getPacket</ref>();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Source:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>p.<ref refid="structAX25Packet_1a80cc00d0a9103d5b80f73f0beb112700" kindref="member">source</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Destination:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>p.<ref refid="structAX25Packet_1aadde089b2ca7c51de77735721a8b0cb5" kindref="member">dest</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Message:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>p.<ref refid="structAX25Packet_1a2dea61d8e883e9d5c9e4d53e8063f19c" kindref="member">msg</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usleep(1000);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>sdr1.<ref refid="classPacketReceiver_1a3cdef77ef428177d339f56c31047e4cd" kindref="member">stopSDR</ref>();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/kushtimusprime/FullscalePrime/PacketReception/PacketTest.cpp"/>
  </compounddef>
</doxygen>
