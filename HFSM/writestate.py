# -*- coding: utf-8 -*-
"""WriteState.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GBwQ4Qfhy5DkSNbgpEP0Ld2xEaf4B4l3
"""

import argparse

parser = argparse.ArgumentParser(description="Enter state name")
parser.add_argument('-n','--state_name',required=True)
args = parser.parse_args()
state = args.state_name
include_file_name = "include/State_"+state+".h"
src_file_name = "src/State_"+state+".cpp"

include_file = open(include_file_name, "w")
guards = "STATE_" + state.upper() + "_H"
state_name = "State_" + state
include_file_content = '#ifndef ' + guards +'\n'
include_file_content += '#define ' + guards + '\n\n'
include_file_content += '#include <iostream>\n#include <map>\n'
include_file_content += '#include \"State.h\"\n\n'
include_file_content += 'class Root;\nclass ' + state_name + ' : public State {\n'
include_file_content += '\tpublic:\n\t\t' + state_name + '();\n'
include_file_content += '\t\t' + state_name + '(std::string &name,std::map<std::string,std::string> &state_transitions,Root* root);\n'
include_file_content += '\t\t' + 'std::string execute() override;\n};\n#endif'
include_file.write(include_file_content)
include_file.close()

src_file = open(src_file_name, "w")
src_file_content = '#include \"' + state_name + '.h\"\n'
src_file_content += '#include \"Root.h\"\n\n'
src_file_content += state_name+'::'+state_name+'(): State() {\n\n}\n\n'
src_file_content += state_name+'::'+state_name+'(std::string &name,std::map<std::string,std::string> &state_transitions,Root* root): State(name,state_transitions,root) {\n\n}\n\n'
src_file_content += 'std::string '+state_name+'::execute() {\n'
src_file_content += '\tstd::cout << \"In ' + state_name + ' and will return end state.\" << std::endl;\n'
src_file_content += '\treturn \"end_state\";\n}'
src_file.write(src_file_content)
src_file.close()

cmake_file = open('CMakeLists.txt','r')
data = cmake_file.readlines()
cmake_file.close()

library_index = data.index('add_library(HFSM\n')
add_cpp = '        '+src_file_name+'\n'
data[library_index] = data[library_index] + add_cpp

cmake_content = "".join(data)

new_cmake_file = open('CMakeLists.txt','w')
new_cmake_file.write(cmake_content)
new_cmake_file.close()

