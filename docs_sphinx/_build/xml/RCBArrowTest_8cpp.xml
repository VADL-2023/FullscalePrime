<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="RCBArrowTest_8cpp" kind="file" language="C++">
    <compoundname>RCBArrowTest.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">ctime</includes>
    <includes local="yes">pigpio.h</includes>
    <includes local="no">chrono</includes>
    <includes local="yes">sensors.h</includes>
    <includes local="yes">config_IMU.hpp</includes>
    <incdepgraph>
      <node id="6">
        <label>sensors.h</label>
      </node>
      <node id="4">
        <label>pigpio.h</label>
      </node>
      <node id="7">
        <label>config_IMU.hpp</label>
      </node>
      <node id="3">
        <label>ctime</label>
      </node>
      <node id="1">
        <label>/home/kushtimusprime/FullscalePrime/FieldTest/src/RCBArrowTest.cpp</label>
        <link refid="RCBArrowTest_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="5">
        <label>chrono</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="RCBArrowTest_8cpp_1ac9a528b4e5880c885fd92e36c19f76ca" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int RCB_P</definition>
        <argsstring></argsstring>
        <name>RCB_P</name>
        <initializer>= 26</initializer>
        <briefdescription>
<para>RPi GPIO Pin for positive RCB motor terminal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kushtimusprime/FullscalePrime/FieldTest/src/RCBArrowTest.cpp" line="17" column="11" bodyfile="/home/kushtimusprime/FullscalePrime/FieldTest/src/RCBArrowTest.cpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="RCBArrowTest_8cpp_1a5704a930c222112ad0073aaa17b4a7ee" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int RCB_N</definition>
        <argsstring></argsstring>
        <name>RCB_N</name>
        <initializer>= 19</initializer>
        <briefdescription>
<para>RPi GPIO Pin for negative RCB motor terminal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kushtimusprime/FullscalePrime/FieldTest/src/RCBArrowTest.cpp" line="23" column="11" bodyfile="/home/kushtimusprime/FullscalePrime/FieldTest/src/RCBArrowTest.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="RCBArrowTest_8cpp_1ae487eb8e88a4aef4450dd9b198eebeb2" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int RCB_ENABLE</definition>
        <argsstring></argsstring>
        <name>RCB_ENABLE</name>
        <initializer>= 13</initializer>
        <briefdescription>
<para>RPi GPIO Pin for RCB motor enable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kushtimusprime/FullscalePrime/FieldTest/src/RCBArrowTest.cpp" line="29" column="11" bodyfile="/home/kushtimusprime/FullscalePrime/FieldTest/src/RCBArrowTest.cpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="RCBArrowTest_8cpp_1abc0a80760952f1fee837c69aa419253e" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int RCB_STANDBY</definition>
        <argsstring></argsstring>
        <name>RCB_STANDBY</name>
        <initializer>= 21</initializer>
        <briefdescription>
<para>RPi GPIO Pin for RCB motor controller standby. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kushtimusprime/FullscalePrime/FieldTest/src/RCBArrowTest.cpp" line="35" column="11" bodyfile="/home/kushtimusprime/FullscalePrime/FieldTest/src/RCBArrowTest.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="RCBArrowTest_8cpp_1a905b42e4cf35058ea62ef1cc495d6e40" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int PWM_MOTOR_MAX</definition>
        <argsstring></argsstring>
        <name>PWM_MOTOR_MAX</name>
        <initializer>= 255</initializer>
        <briefdescription>
<para>Max PWM Signal for motor to run full speed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kushtimusprime/FullscalePrime/FieldTest/src/RCBArrowTest.cpp" line="41" column="11" bodyfile="/home/kushtimusprime/FullscalePrime/FieldTest/src/RCBArrowTest.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="RCBArrowTest_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
<para>Main Method: Runs RCB Motor clockwise or counterclockwise. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>exit status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kushtimusprime/FullscalePrime/FieldTest/src/RCBArrowTest.cpp" line="48" column="5" bodyfile="/home/kushtimusprime/FullscalePrime/FieldTest/src/RCBArrowTest.cpp" bodystart="48" bodyend="130"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Runs RCB Motor clockwise or counterclockwise. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pigpio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sensors.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config_IMU.hpp&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//Copy<sp/>this<sp/>file<sp/>into<sp/>MainDriver<sp/>includes<sp/>-&gt;<sp/>currently<sp/>in<sp/>IMU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="RCBArrowTest_8cpp_1ac9a528b4e5880c885fd92e36c19f76ca" kindref="member">RCB_P</ref><sp/>=<sp/>26;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="RCBArrowTest_8cpp_1a5704a930c222112ad0073aaa17b4a7ee" kindref="member">RCB_N</ref><sp/>=<sp/>19;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="RCBArrowTest_8cpp_1ae487eb8e88a4aef4450dd9b198eebeb2" kindref="member">RCB_ENABLE</ref><sp/>=<sp/>13;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="RCBArrowTest_8cpp_1abc0a80760952f1fee837c69aa419253e" kindref="member">RCB_STANDBY</ref><sp/>=<sp/>21;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="RCBArrowTest_8cpp_1a905b42e4cf35058ea62ef1cc495d6e40" kindref="member">PWM_MOTOR_MAX</ref><sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="RCBArrowTest_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Temporary<sp/>initialization<sp/>thing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(gpioInitialise()<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;GPIOs<sp/>not<sp/>initialized&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;GPIOs<sp/>initialized&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Initialize<sp/>VN-100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>VnSensor<sp/>*mVN<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>VnSensor();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;IMU<sp/>Connecting&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>mVN-&gt;connect(IMU_PORT,<sp/>IMU_BAUD_RATE);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mVN-&gt;isConnected())</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;IMU<sp/>Failed<sp/>to<sp/>Connect&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;IMU<sp/>Connected\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RCB<sp/>Motor<sp/>Initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>gpioSetMode(<ref refid="RCBArrowTest_8cpp_1ac9a528b4e5880c885fd92e36c19f76ca" kindref="member">RCB_P</ref>,<sp/>PI_OUTPUT);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>gpioSetMode(<ref refid="RCBArrowTest_8cpp_1a5704a930c222112ad0073aaa17b4a7ee" kindref="member">RCB_N</ref>,<sp/>PI_OUTPUT);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>gpioSetMode(<ref refid="RCBArrowTest_8cpp_1abc0a80760952f1fee837c69aa419253e" kindref="member">RCB_STANDBY</ref>,<sp/>PI_OUTPUT);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>gpioWrite(<ref refid="RCBArrowTest_8cpp_1abc0a80760952f1fee837c69aa419253e" kindref="member">RCB_STANDBY</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>gpioSetMode(<ref refid="RCBArrowTest_8cpp_1ae487eb8e88a4aef4450dd9b198eebeb2" kindref="member">RCB_ENABLE</ref>,<sp/>PI_OUTPUT);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>gpioPWM(<ref refid="RCBArrowTest_8cpp_1ae487eb8e88a4aef4450dd9b198eebeb2" kindref="member">RCB_ENABLE</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exit<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>userInput<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;What<sp/>do<sp/>you<sp/>want<sp/>to<sp/>do<sp/>to<sp/>the<sp/>lift<sp/>((L)eft<sp/>|<sp/>(R)ight<sp/>|<sp/>(S)top):<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cin<sp/>&gt;&gt;<sp/>userInput;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Rotate<sp/>Left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(userInput<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;L&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpioWrite(<ref refid="RCBArrowTest_8cpp_1abc0a80760952f1fee837c69aa419253e" kindref="member">RCB_STANDBY</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpioWrite(<ref refid="RCBArrowTest_8cpp_1ac9a528b4e5880c885fd92e36c19f76ca" kindref="member">RCB_P</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpioWrite(<ref refid="RCBArrowTest_8cpp_1a5704a930c222112ad0073aaa17b4a7ee" kindref="member">RCB_N</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpioPWM(<ref refid="RCBArrowTest_8cpp_1ae487eb8e88a4aef4450dd9b198eebeb2" kindref="member">RCB_ENABLE</ref>,<sp/><ref refid="RCBArrowTest_8cpp_1a905b42e4cf35058ea62ef1cc495d6e40" kindref="member">PWM_MOTOR_MAX</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>responseRollPitchYaw<sp/>=<sp/>mVN-&gt;readYawPitchRoll();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Roll:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>responseRollPitchYaw[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Pitch:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>responseRollPitchYaw[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Yaw:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>responseRollPitchYaw[2]<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotate<sp/>Right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(userInput<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;R&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpioWrite(<ref refid="RCBArrowTest_8cpp_1abc0a80760952f1fee837c69aa419253e" kindref="member">RCB_STANDBY</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpioWrite(<ref refid="RCBArrowTest_8cpp_1ac9a528b4e5880c885fd92e36c19f76ca" kindref="member">RCB_P</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpioWrite(<ref refid="RCBArrowTest_8cpp_1a5704a930c222112ad0073aaa17b4a7ee" kindref="member">RCB_N</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpioPWM(<ref refid="RCBArrowTest_8cpp_1ae487eb8e88a4aef4450dd9b198eebeb2" kindref="member">RCB_ENABLE</ref>,<sp/><ref refid="RCBArrowTest_8cpp_1a905b42e4cf35058ea62ef1cc495d6e40" kindref="member">PWM_MOTOR_MAX</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>responseRollPitchYaw<sp/>=<sp/>mVN-&gt;readYawPitchRoll();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Roll:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>responseRollPitchYaw[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Pitch:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>responseRollPitchYaw[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Yaw:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>responseRollPitchYaw[2]<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(userInput<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;S&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!exit);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>motor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>gpioWrite(<ref refid="RCBArrowTest_8cpp_1abc0a80760952f1fee837c69aa419253e" kindref="member">RCB_STANDBY</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>gpioWrite(<ref refid="RCBArrowTest_8cpp_1a5704a930c222112ad0073aaa17b4a7ee" kindref="member">RCB_N</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>gpioWrite(<ref refid="RCBArrowTest_8cpp_1ac9a528b4e5880c885fd92e36c19f76ca" kindref="member">RCB_P</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>gpioPWM(<ref refid="RCBArrowTest_8cpp_1ae487eb8e88a4aef4450dd9b198eebeb2" kindref="member">RCB_ENABLE</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>gpioTerminate();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disconnect<sp/>IMU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IMU_ACTIVE)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;IMU:<sp/>Disconnecting&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mVN-&gt;disconnect();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;IMU:<sp/>Disconnected&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mVN;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/kushtimusprime/FullscalePrime/FieldTest/src/RCBArrowTest.cpp"/>
  </compounddef>
</doxygen>
